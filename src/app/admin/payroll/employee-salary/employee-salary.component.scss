// Dans styles.scss (ou un fichier global importé)

$sidebar-width: 280px; // Ajustez !
$transition-speed: 0.3s;

// Ciblez le conteneur de contenu principal de votre layout
// Ce sélecteur peut être plus spécifique que 'section.content'
// Ex: '.main-content-wrapper > section.content', '.page-container > section.content'
// Trouvez le bon sélecteur en inspectant votre structure HTML globale.
.main-layout-content section.content { // Exemple de sélecteur plus global
  margin-left: 0;
  transition: margin-left $transition-speed ease-in-out, width $transition-speed ease-in-out;
  width: 100%;
  box-sizing: border-box;
  padding: 20px; // Conserver le padding ici ou le mettre sur le conteneur parent

  // Applique le décalage si un élément parent (ex: body ou un wrapper) a la classe .sidebar-visible
  // Ou si le composant sidebar ajoute une classe spécifique au body (comme 'ls-closed' que vous avez)
  // Adaptez le sélecteur ci-dessous à votre cas !

  // Option 1: Si .sidebar-visible est sur le même élément
  &.sidebar-visible {
     margin-left: $sidebar-width;
     width: calc(100% - #{$sidebar-width});
  }

  // Option 2: Si une classe est ajoutée au BODY (basé sur votre code sidebar)
  // Votre sidebar semble ajouter/retirer 'ls-closed' au body.
  // Quand 'ls-closed' est ABSENT, la sidebar est visible (sur grands écrans)
  // DONC, on applique la marge QUAND 'ls-closed' n'est PAS là
  body:not(.ls-closed) & { // Cible 'section.content' quand le body N'A PAS la classe 'ls-closed'
       @media (min-width: 1025px) { // Appliquer seulement sur grands écrans (où ls-closed est retiré)
           margin-left: $sidebar-width;
           width: calc(100% - #{$sidebar-width});
       }
  }

}